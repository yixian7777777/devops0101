sudo: required
services:
- docker
language: python
python:
- '3.7'
before_install:
- docker version
- docker info
install:
- npm install newman
- pip install -r requirements.txt
- pip install -r test-requirements.txt
- pip install names
- pip install nose
- pip install Flask-Testing
before_script:
- node --version
- npm --version
- node_modules/.bin/newman --version
script:
- python -m unittest discover
- docker build -t swagger-spring-example:1.0.0 .
- docker run --name example_api -d -t -p 127.0.0.1:8080:8080 swagger-spring-example:1.0.0
- docker ps
- count=0 && until $(curl --output /dev/null --silent --head --fail http://localhost:8080);
  do printf '.' && sleep 3 && count=$((count+1)) && if [ $count -gt 5 ]; then break;
  fi; done
- docker logs example_api
- node_modules/.bin/newman run tests/postman_collection.json -e tests/postman_environment.json
after_success:
- docker login -u $DOCKER_USER -p $DOCKER_PASS
- docker tag yixian7777777/swagger_server yixian7777777/swagger_server
- docker push yixian7777777/swagger_server
env:
  global:
  - secure: aft7HW34nFk6AeoJ5xwpyc4JNLzVEGYb6x/em2+hVKa7iikVXkrTYA/vMMvSiLyMkp4UryK6GFAkbCwpAOmqnjxGDDOXWZWXSSRiWmxMFmOPk0MOQXF/AeDWeOMZg/Sx+name5j2x72KnJPyVfJx5/aVw349usPw4WA3WGGBXCQpBSbnBAhlzcMHGPG+570gSjBJJoBSv3pGG7gKhlUwPdxow8Y6TVmEDAcsyVWZeRMjnso8aI1A/30ZjBZohjBzC68w90kIEpRI9lDUo8CAjkv5jXrPbMderCEuDta6XB5ueDqlZOpjb0azr/jgYQzS+Ig5+IXFJTQgsOv1Wxyp8IFNsm7xCm6NT7ELMD7lLAX94LlktD2GpwXUfZii/rvNqK2w9as3XpseZNRL+7JYnw1O0p7g1BGFUHGkGG9QF8uZpTBCR9UPe/hQlRRGsscYiK8yIruUZxOoaznPvDRgJqHLzlAET2kpAiEDN7KQfLgNmhxxj1RySzP/UbC5z7SrrCHegNjr7NBFQslwQ1vgy7om/Xsf8gzVQiJtwEw8e7QaPMKUs6bxiU20ydTpSH7AszIAMBx0KHpt9e5t0He2BRRw3uZYB51/DZ1lLbYowZxMQCszqG+hmO1xF/+FsHHNkkLCYi+SkK5r854tdJprrE2aIVHBWUufn2Q7Pj4Gb6U=
  - secure: Hdf7l6LCYIhWHSTA5/+eaLV9ynnvpHgZFpLR9y3OzsPBLCs57YODm0xx3RX9mpV7Owye7G7IIMWPmBpb4oMLdHAv+69NKgXbuGtKvT1b2PkbowpVnwwuXITNwo03S5AefapOGv8f7uy6N4wMB/cwd4tkDT0psfJyyLeEVVlcYZEVYWB7uMHxTPhmKMr1Esg7zkT7NhmihThCmAxO3n64oFxrHp4wVujM1fyb5U07eVOeXKAwrdSCNBPxSfFvoBmpKew3Q2hcfR1obt3Bj5cqxCiCbWkfhA1BI6F/MXfp3sO+WZAJ3Xkxt714o0GyHERO2F0AzOzF9M/crUuAcKyK14hyQnJNzEzyKJPPqgzDg+unp9+KRBkDwXaKNrls627Fngw90Nenjz7UBhynvd1b6rbQEOXLIQp69JVtrY57NIkWHlgKOJlweJfDVbDOapeaIEKbNUa8f9tR9UbA3RGlU2cQ5D3dgsLZ9/98si2mSgrUjfnFNpD0OdPxp3VavVPj3XqNIAJvH07KLbuaBtqjuywFhqEhQMJm5/LWqQvIyJttMdHMpj7NSXOsUHJgIlB7AbM5WTOx9DN6ggw6u+qYt9coatIUHzuTV1xnEd6mQaYEGml6KwKttGlXLuzmfgPECzQmvserxnFzEE3M6Yx+ketU4s1bLA7w64FraKugvW0=
