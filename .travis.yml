sudo: required
services:
- docker
language: python
python:
- '3.7'
before_install:
- docker version
- docker info
install:
- npm install newman
- pip install -r requirements.txt
- pip install -r test-requirements.txt
- pip install names
- pip install nose
- pip install Flask-Testing
before_script:
- node --version
- npm --version
- node_modules/.bin/newman --version
script:
- python -m unittest discover
- docker build -t swagger-spring-example:1.0.0 .
- docker run --name example_api -d -t -p 127.0.0.1:8080:8080 swagger-spring-example:1.0.0
- docker ps
- count=0 && until $(curl --output /dev/null --silent --head --fail http://localhost:8080);
  do printf '.' && sleep 3 && count=$((count+1)) && if [ $count -gt 5 ]; then break;
  fi; done
- docker logs example_api
- node_modules/.bin/newman run tests/postman_collection.json -e tests/postman_environment.json
after_success:
- docker login -u $DOCKER_USER -p $DOCKER_PASS
- docker tag my_docker_reposetory/swagger_server yixian7777777/swagger_server
- docker push yixian7777777/swagger_server
env:
  global:
  - secure: R7ESV9GmHFnACIeAtUto0xyyyh2n0LCn6+OAh9MrWLL6iCXpzhhX3zEhZCPZEBzmX9H0MjEcqJpmhcw1dxy3/K7OtBXZLRccfXNRPTAZZuDsDi+MAGJq/0rjVQ149AQ29SmMlRxu/fLjeE835qgpMzlrIBlIjQ0Ewt1Jjee+KW0I1t0DfHoKusSmbXkNpx8rTOMpKt/DOmdwexMD8EeN7qsD8lEyLcKNbRR1uLcKDntgJnLWuV0dWQqLnV4vx70HMJeGkR+Wzw3MvY2IkplvaN7HYamPoqSnhPwSOsBQi+x4lCSKQ1bE0bIUh2Xg7dngi0exD86uFRxFMEVPgotKzcjVSUqiNIWx9B9F90AcyEp+JrovKssNk2GAiwK6PXHBq7vxmrdSZ69KSSFLjxR5KW0D2cWIBZosxIFM/s6Lyr+TYUO1JnCfEBisabAkUrfnxjUDogk7bkpGc4WOzFI07FFZNMZ44MQDX6BzwYP5AiJ+uF+S8p8asZCTyW0LlkF9Q5l5kOmr4bmrhRCRlEPfXE2ieqzSxE2Nl6HJwCayBW3yoqclOqCPT6VepuDn5cuyY2tWJ8GR/aNYPleXtSx2vLrjZyTzoWrj0IZJQe1Xwwsvp6bT3ttDsfnFsZE3i/LBXzwTF/6bceO83vbI6wkg146xCVF+3tQ3L9avCM/8c3s=
  - secure: jZd6zXf0N/hnHgCzxoH2pDUgweMrcbTAmJqi5pc7R1khpIeJVRO9z/FwDksCH17yRvzxXI4hD88u2x0N9yAYGFEdr80Mv/8W+CedheEn9USW+x4dITAtoj+473pmFjVZ9HOTx4dJOZW/t1FpX587NxJM1wDCDtZfz5R/XFr1PjrTN4JhNSR2mTypojYJHuYg0ncSeV55ghoUXb+Y0fdodvb4AiY/g9dqYShelfB9sE/laTAikw2Xe3Y1aNjn5Sg95NWTFUtT2ADFRO5MMLuugW1efuHDUeP8Me2cXonQC/aFUrSSkxy2vV4blWREdXYUuXjdCC0oaLX1cKl3JFz9DDLKi2JIUM5PSJox9aAfkTiholFCpypC/p9MKevF4y5q65WUREZYqZkZry7a5Y3WoIiosfa1FOEbC3l3fYT9/ssjpOShfcjZRr/ngxGX7qN9bLJqDkbJVBWcR5oy2D3g0S+lCwtF66eZ3/p3NeKz9iYWpHS2qV8+EitiNrVR10jF11PhhQinoGc6ov/ieC15Jfcr0bbMu/VD3glG5ThD7wc04GfC7+EiWjFdM9zhsKZ1bzTk4WHsp5YxqIGAtu72ndVkQs/CChzgOZWDk9GaVzMjL3JfR0sEUkBdZrZX0CSsn21yGQSW76Oe6B0NdUmz2Zn4T3Ubcj76iv94RpODUjQ=
  - secure: wRxf7qTyoW68stQyF+dNkaXpNu84tE4SrwKBPeE6ik4ZftpJZioxPZ7VtRAtld6rSUp++/nty5LaNi2+tolopSnSAO6j1i0PttbIfdao4yE3YFaN1e7Xc6iofKobkdzDIJGT0mX/Ir99F786sdmkHjD7SJsqQz97ARo8P+ED70WyXA3JjqwbMwsS1UoJrIkwYfSSBwnZqXR8UelvENo0UdogQDrqb0be3MlKa0trpy+NpVRgpFlLRs9OhuvybO+JlCnG1sSF70NqDBUs3AxmxVK9xTUObkCMKb4hGJYMlEnPlobjo6Lt0i6aAdX3nMYHySI61lAIPRRuIIRmiNWwcpuUKqoG+guySbHI5UXFjVo25TCSzC2Pig80iYmwBIXN8V90w7R+6smawmjv6NzSXCHTZplc4gtY99gM/icS8HUrtLlfJ3Jtmrv7wKP476wWhufFEA/FY4XP5e3owns36lxm3G40lSq2qOs6ZmgWRG9m6zaqk1CWjGTem1LrU1X7uLp/WUrvipbD4rkjC7NC3BpUD+kIziHzOPnhv0S7VIQXYhP4TkT+fGngYPG1B2h31o4q/JDyBRx6fKhEDeMg209PQkYCFv9fggnrmRrkfohdXZenBW9KJ2SLwjGKKhpUE5W2DOoynTXxFof05afMc0RFdAQSPEYBusCFFRag6iQ=
  - secure: TfnzQswlWq37hq1s9vDJyoCUbwegPtBdJrmQwbAWoUAhxkZvQ/7q5q+x2nvip+D9Np5T/OCPyuHAZ/vrQJh5cpwSGCsMmF/qQ1+sTPeTJBo8+dh9QmwvYn661HTu4jRZgEHr/W1rhLpD37CULexqfD/a8taOjoMFli0TFjyF1EKGiqhBHIL5kjGXYTRqFJBBbdvel4oyptSUeDIW/luojENEs0PoVjMgm1peXZTpgL3Zb/hyQjAEgxu8NSOuvHsP+Sz4LWma055fFkFg00vGT3l3DaMJXYETeXm8/a2eICp7sWH3rpJRa3UqevYzy0b1T1arKRHvcv8fEp/4FijtHGae5/WqVmsq8UL7q1s1JlSoW2OZXRhP/zhgl9TEy4E2zpZ4QFZBRoIZEqUy4AwXg1iIWuaiwooUzr8I5aZI6bcPby+1M1FBL6iKtkbMYHrZKwl/t51gdlPCpHNaheemu66POKzksI54mF/QmzvxKZoEsRpQxOH5Vf62PWNgSSE0MextNJwPoxaqsaYVtrXC/Dc/VYqOmXg48qnL44U4U17kxIi4NbB44UNzSEHwCDKibrmww+SSvuzrSA4OBC/+VPzQkGNaS6cgNVipFZ8GxCmHcFtoNp1PniCUofI1hVGm9V6klubaOlr4xa5OGCBZrGWsCvxQg1Gw0Wfo/vg0who=
