sudo: required
services:
- docker
language: python
python:
- '3.7'
before_install:
- docker version
- docker info
install:
- npm install newman
- pip install -r requirements.txt
- pip install -r test-requirements.txt
- pip install names
- pip install nose
- pip install Flask-Testing
before_script:
- node --version
- npm --version
- node_modules/.bin/newman --version
script:
- python -m unittest discover
- docker build -t swagger-spring-example:1.0.0 .
- docker run --name example_api -d -t -p 127.0.0.1:8080:8080 swagger-spring-example:1.0.0
- docker ps
- count=0 && until $(curl --output /dev/null --silent --head --fail http://localhost:8080);
  do printf '.' && sleep 3 && count=$((count+1)) && if [ $count -gt 5 ]; then break;
  fi; done
- docker logs example_api
- node_modules/.bin/newman run tests/postman_collection.json -e tests/postman_environment.json
after_success:
- docker login -u $DOCKER_USER -p $DOCKER_PASS
- docker tag yixian7777777/swagger_server yixian7777777/swagger_server
- docker push yixian7777777/swagger_server
env:
  global:
  - secure: IIIAcAqQbhpligWszV7zdLxQsezguVJkemBS2huAXVizOqwSb8pcx1Z9UhuL/DPZNRXGOst2amBOvg7/GcLZWcVLeXg2BakyrEQTcoF6Q/Q28Zr5xJagMSO9QnKfGfocQ9i0jDdVWhmo+Nf+Wi6R7+WA+xtHcZSKaD3aVZq2CNvgR28uIPA3YoM3aUY60obqQPtGMV1MZGVqmiWCVEjlvaB+HnFMtjb7O/9BmBDjYA6chhn+KT4IiQUCgQHd9jFbByBdPSgkydvKhIyZn2/5TlFCvqG+BmCkmF/Qoe+iMDpFWSRR8nXzc/SgLo2zggBYpeqygdvZvlpp9ivSTQlhtp07NthdU7bXiPDRhHGHiminysO6Pe8Vf81zslmmPzAyxmRu4XLAyyAHlqVQX2qRz8XnyNvH6Ra4XxpUDViYavrIaCI+cMkdC0z64civu73O+8D2ME4AkFRG0yG8tRNkkh8HQ90DMG594sSpjdWrQQCs/O7YRqgpWlZnOtHdAhoATnCxoQpOW9phZ/L5Yq0eR74pcAescvdTpeWPAZxguN+0NcOZGNeD+lONWi+0niKidUF5LvqueljvcbT2VjTk29Kf/9SSmrwPVQ8NjYLFaEm7putwhRS5oTP/6FeqEHwS1rZhmmiboQPOcYouwOB/aGX4xB+eRxtVyxBAfzFvZiQ=
  - secure: q/5o7A87ni8nTj4DtL5z+g11iU6sccEBfCVqMRE3YsGF8/1gXJVyCNytTBClxjr2elZJYULzHfzgpiyT970XhPb7XhFtUI67ghJuLBqZ6zcxSZmOXiJZzCL0CoIuXQl0hxhpELFIvWzNVA5m02JuAQuKCXDYRChMBlYs1zsNMDpvT4VpZnyDoL/Wbklwiu8/Jt1kX/aJYnlvHYzOEuTuHrcEVeEdSsbW02ULk7xcYCg5FdGS9JSKQ4y+7RwoZPXOUyxpAVcgqRDSUt+d608l5uC1w7/axD4CPb844KXVTT6u7Xk9Llh5xlIBizWr8T1ByZCoS7m+AfOu4LUCPjGeXbTiShB+OZ8M9pCRPs7sytsWrNf8PS6GR6/n/IH+Xgrg3nzhbMtruL5zdMPFVbGGofDCiaA5ZPYMucSmVCfD/Oveg4BqUUe0sDdzsUvZrjsy6Dhf0LfnRA7Upng8Vtr/gFV8puRnXPkhgcsMvP+3UegiOt7tao8rAc49vbTlIGPnloREassCLdbi58eAYkHkZ5Ys3bA81epF7brtZUBoYLdn5UcFlRyL9gDnI2l4nL8HyyjVSHr36cms1lqUqIAWYf2NUQffv0O8y1+6oVVlyC47qnQsvU2Xe2YogHnqM3EIY4LZzbLQB0vSmpOFtpyDjvdJV+ReVwRDDUah/fMyZ+E=
  - secure: UV/y9BypCtNtsoSXS04J6vdNl/KJFhzv0wtO5XAiJvpmlTSkZTalLRLLF2QtBh94/4yErUvSu9IgZwoGrWLq/vEczQdC/aCd1jVJmjRnynFJ254hIAPEqCY26lY0CmjsYjDZMoDEqpcGtW1VQORuTzUK3xhV4AbbLk7uNeFtxJDuX8aVrgDxSPDRUVDnQH+J6rhDha6r1QElBv9oyn0OOpprIgXYLwU36/crMH33bSKF8O5agILT7wpzC2KTxksJqtuOaC9k+m0Xftm7dBIJa/pMJMD77yUiy8dRElo8vshwvhGurr4oLf2F92CCXsEQ9bzvd0RrhqcSgTVM3n4MDOp6REinwm8CrTEWGwJFYn0sCVc5qMLl9XG9oNVBL2Cnq7plYnFcEJwK+ppvMrknGhqTidUE8UPqA+6vurJQXHsadLvfsnLxftasIz97izA58wXNpBOtP7tNqytvlpt7phmmaBiVgX4bOYG2OMjWlpf6og24+c41eOsXISGfErOiL6DzMMTxu6W+tRR51KC9/dd5vjlA10v2ovYVoDQ8XJ4tE2pQ17zDMuRAC0aVkJ0LCu4xUuSCvlXj2dRxs/DhFnR4VG8BTVuOf0sZFcNabPJzbUeLvDXCv6dfchKH7+gcZ8Yq5yH6gJ+dlMSi+w+btwOyX8f4VqsSM+RFz4Gu/jQ=
  - secure: sQi/Y9m8cf61ce6BinVRNcciyHCw5VjG7eNm/w5LzdsxlY5izuI3wFK9LxeQxI43zKNEnRwHZaXh+FO7tPk8zQ80BEvtOgXzwVe24cAFqFUNdBd2oxPpls+L/J3rkpAeDAHXWRVUu8Vb9CQeQ+jUqGt86QKvm0q+AvfnLB4AcNWIDXt/jQTcA4N9VUA+WxIG+f+OImSjgib8fH3Kjl3HKZmNc5K1EFK6DuikBn/HOSKlB0sURpSqPIejnXWFlCT5Jvhi9e95qmzzqj21aLuTNHEX76Ob1T4xY/CZkhx45+7ytlIIKjwbG0pOhj6+8G6IQiFFU3k6sqO33JvUXnPr09k/i7KaeQKm8Fii+WCuEI1GNWO6UACYJEjhUxZ5xEr9GuaEZaaaQ7qZQ80KgO62WiFO5t4BjG1HzFMpnIE1XSX29/toKxtt4BpCv87Ogo0S8ShIO5OTo1558rMkEW6hiCQR5L+DfmunU61teoOzx8kI5nZ0nTtMWXzxceol1H9doJJe1CqOoHRjRskGLeJZdRhzjfTSvI4TctEj9EfFRV/nQYl0uVJZgDAItChyXNL53p5O/w8d/JJk9XwQCpdCpFaJD1rWzd2sdon1egNSYhL8k6jPVKyjSYjKMmi55coP+BhLp6/LzJCjHjnimm5ZOrVxZRuGK6DN3/cIYTP2CaM=
